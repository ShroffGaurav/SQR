<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:smartTable="sap.ui.comp.smarttable" xmlns:l="sap.ui.layout"
	xmlns:f="sap.ui.layout.form" xmlns:u="sap.ui.unified" xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns:table="sap.ui.table" xmlns:custom="com.sapZSQRMBWA.control">
	<Dialog resizable="true" title="{@i18n>addFinding}" afterClose="dialogAfterClose" contentWidth="70%" draggable="true">
		<VBox>
			<IconTabBar class="sapUiResponsiveContentPadding" id="iconTabBarAdd">
				<items>
					<IconTabFilter icon="sap-icon://hint" text="{i18n>info}" key="1">
						<f:Form editable="true">
							<f:layout>
								<f:ResponsiveGridLayout labelSpanXL="4" labelSpanL="5" labelSpanM="5" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="0" emptySpanL="0"
									emptySpanM="0" emptySpanS="0" columnsXL="2" columnsL="2" columnsM="2" singleContainerFullSize="false"/>
							</f:layout>
							<f:formContainers>
								<f:FormContainer>
									<f:formElements>
										<f:FormElement label="{i18n>supplier}">
											<f:fields>
												<Input editable="false" required="true" value="{NewFindingModel>/SupplierName} ({NewFindingModel>/SupplierId})"/>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="{i18n>subject}">
											<f:fields>
												<Select id="SubjectSelect" forceSelection="false" change="onSubjectChange" valueStateText="Subject must not be empty"
												selectedKey="{path: 'NewFindingModel>/SubjectId', type: 'sap.ui.model.odata.type.String', constraints: {nullable: false} }"
													items="{ path: '/ZWM_SUBJECTS_VH', sorter: { path: 'name' } }">
													<core:Item key="{id}" text="{name}"/>
												</Select>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="{i18n>category}">
											<f:fields>
												<Select forceSelection="false" id="CategorySelect" change="onCategoryChange" selectedKey="{NewFindingModel>/CategoryId}"
													items="{ path: '/ZWM_CAT_VH', sorter: { path: 'name' } }">
													<core:Item key="{id}" text="{name}"/>
												</Select>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="{i18n>question}">
											<f:fields>
												<Select id="questionSelect" change="onQuestionChange" forceSelection="false" selectedKey="{NewFindingModel>/QuestionId}"
													items="{ path: '/ZWM_QUESTIONS_VH', sorter: { path: 'question_content' } }">
													<core:Item key="{question_id}" text="{question_content}"/>												
												</Select>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="{@i18n>score}">
											<f:fields>
												<Select id="ScoreSelect" change=".removeErrorStateSelect" forceSelection="false" items="{ path: '/ZWM_SCORE_VH', sorter: { path: 'Text' } }" selectedKey="{NewFindingModel>/ScoreId}">
													<core:Item key="{Id}" text="{Text}"/>
												</Select>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="{@i18n>qualityCategory}">
											<f:fields>
												<Input id="QualityCategoryInput" enabled="false" value="{NewFindingModel>/QualityCategory}"/>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="{i18n>status}">
											<f:fields>
												<Select id="StatusSelect" forceSelection="false" change=".removeErrorStateSelect" items="{path: '/ZWM_STATUS_VH', sorter: { path: 'Text' }}" selectedKey="{NewFindingModel>/StatusId}">
													<core:Item key="{Id}" text="{Text}"/>
												</Select>
											</f:fields>
										</f:FormElement>
									</f:formElements>
								</f:FormContainer>
								<f:FormContainer>
									<f:formElements>
										<f:FormElement label="{i18n>inspectionFindings}">
											<f:fields>
												<TextArea id="findingText" change="removeErrorStateInput" maxLength="256" rows="3" required="true" value="{NewFindingModel>/Findings}"></TextArea>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="{i18n>inspectionLocation}">
											<f:fields>
												<Input id="Locationfrag" change="removeErrorStateInput" required="true" value="{NewFindingModel>/Location}"/>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="{i18n>supplierRiskCategory}">
											<f:fields>
												<Select id="RiskCategorySelect" change=".removeErrorStateSelect" forceSelection="false" items="{ path: '/ZWM_RISK_CAT_VH', sorter: { path: 'text' } }" 
												selectedKey="{NewFindingModel>/SupplierRiskCategory}" >
													<core:Item key="{id}" text="{text}"/>
												</Select>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="{i18n>shortTermContainment}">
											<f:fields>
												<Input id="ShortTermContainment" value="{NewFindingModel>/ShortTermContainment}"/>
											</f:fields>
										</f:FormElement>
										<f:FormElement label="{@i18n>supplierCausalFactor}">
											<f:fields>
												<Input id="CasualFactor" value="{NewFindingModel>/SupplierCasualFactor}"/>
											</f:fields>
										</f:FormElement>
									</f:formElements>
								</f:FormContainer>
							</f:formContainers>
						</f:Form>
					</IconTabFilter>
					<IconTabFilter icon="sap-icon://attachment" text="{i18n>attachments}" key="2">
						<List mode="Delete" delete="onDeletePressAdd"
							items="{NewFindingModel>/Attachments}"
							noDataText="{i18n>noFilesFound}" >
							<headerToolbar>
								<Toolbar>
									<ToolbarSpacer/>
									<u:FileUploader id="oFileUploader" change="onFileUploaderChangePress" buttonOnly="true" iconOnly="true" icon="sap-icon://add" multiple="false" sameFilenameAllowed="true"/>
								</Toolbar>
							</headerToolbar>
							<items>
								<ObjectListItem icon="{ path: 'NewFindingModel>type', formatter: '.formatter.attachmentIcon' }" title="{NewFindingModel>name}"/>
							</items>
						</List>
					</IconTabFilter>
				</items>
			</IconTabBar>
		</VBox>
		<beginButton>
			<Button type="Accept" text="{i18n>save}" icon="sap-icon://accept" press=".onAddDialogSubmitButton"/>
		</beginButton>
		<endButton>
			<Button type="Default" text="{i18n>cancel}" icon="sap-icon://sys-cancel" press=".onAddDialogCancelButton"/>
		</endButton>
	</Dialog>
</core:FragmentDefinition>